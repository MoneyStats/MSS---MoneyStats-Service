env: ${APP_ENV:Deploy} # Used for Google Cloud LOG
server:
  servlet:
    context-path: ${CONTEXT_PATH}
spring:
  application:
    name: MoneyStats Service
    starter-log: true
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: ${DATABASE_JDBC_URL}/${DATABASE_NAME}
    #url: jdbc:mysql://mysqldb:3306/${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: true
    show-sql: true
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
  sql:
    init:
      mode: always
  codec:
    max-in-memory-size: 1MB
  servlet:
    multipart:
      max-request-size: 1MB
  data:
    redis:
      enabled: ${REDIS_CACHE_ENABLE}
      cron: 0 0 1 * * *
      host: ${REDIS_CACHE_HOST}
      json: true
      password: ${REDIS_CACHE_PASSWORD}
      port: ${REDIS_CACHE_PORT}
      sslEnabled: false
      #sslTruststore: path of the truststore (.jks file)
      #sslTruststorePassword: password of the trustore
      username: ${REDIS_CACHE_USERNAME}

rest:
  scheduled:
    marketData:
      active: ${SCHEDULER_MARKET_DATA_ACTIVE}
      #quantity: ${SCHEDULER_MARKET_DATA_QUANTITY}
      quantity: 250
      delay:
        start: ${SCHEDULER_MARKET_DATA_DELAY_START:60000}
        end: ${SCHEDULER_MARKET_DATA_DELAY_END:3600000}
    forex:
      active: ${SCHEDULER_FOREX_ACTIVE}
      delay:
        start: ${SCHEDULER_FOREX_DELAY_START:1800000}
        end: ${SCHEDULER_FOREX_DELAY_END:32400000}
    caching:
      active: true
  client:
    emailSender:
      url: http://email.sender:8080
    access-sphere:
      client-id: MONEYSTATS-PROD-01
      token: ${CLIENT_ID_TOKEN}
      baseUrl: http://localhost:8081

logging:
  config: classpath:logback-google.xml # classpath:logback-google.xml, classpath:logback-logtail.xml
  level:
    com.giova.service.moneystats: ${LOGGING_LEVEL}
    io.github.giovannilamarmora.utils: ${LOGGING_LEVEL}

filter:
  requestResponse:
    enabled: true
    shouldNotFilter: "**/swagger-ui/**,**/api-docs/**,/api-docs,*/,**/dist/**,**/documentation/**"

app:
  invitationCode: ${TOKEN_INVITE}